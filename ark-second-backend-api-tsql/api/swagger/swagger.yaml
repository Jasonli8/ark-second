swagger: "2.0"
info:
  version: "2.0.0"
  title: Ark Stock Tracking System
host: localhost:5000
basePath: /
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
  - https
securityDefinitions:
  Basic:
    type: basic
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:


  /api/db/funds:
    get:
      summary: Gets the list of tracked funds.
      security:
        - Basic: []
        - Bearer: []
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                fundName:
                  type: string
                description:
                  type: string
        '500':
          description: Couldn't retrieve data from database.
  
  /api/db/funds/recent:
    get:
      summary: Gets most recent data on a company for a given fund.
      security:
        - Basic: []
        - Bearer: []
      parameters:
        - name: fundType
          in: query
          required: true
          type: string
        - name: companyId
          in: query
          required: true
          type: integer
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                fundName:
                  type: string
                description:
                  type: string
                companyId:
                  type: integer
                companyName:
                  type: string
                ticker:
                  type: string
                cusip:
                  type: string
                date:
                  type: string
                shares:
                  type: number
                marketValue:
                  type: number
                weight:
                  type: number
                sharesDifference:
                  type: number
                marketValueDifference:
                  type: number
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Couldn't retrieve data from database.
          
          
  /api/db/funds/companies:
    get:
      summary: Gets list of companies in a given fund.
      security:
        - Basic: []
        - Bearer: []
      parameters:
        - name: fundType
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                fundName:
                  type: string
                description:
                  type: string
                companyId:
                  type: integer
                companyName:
                  type: string
                ticker:
                  type: string
                cusip:
                  type: string
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Couldn't retrieve data from database.
          
          
  /api/db/funds/holdings/date:
    get:
      summary: Gets cumulative holdings across specified funds for all tickers by date. (Date in yyyy-mm-dd format)
      security:
        - Basic: []
        - Bearer: []
      parameters:
        - name: fundType
          in: query
          required: true
          type: array
          items: 
            type: string
        - name: date
          in: query
          required: true
          type: string
          format: date
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                fundName:
                  type: string
                description:
                  type: string
                companyId:
                  type: integer
                companyName:
                  type: string
                ticker:
                  type: string
                cusip:
                  type: string
                date:
                  type: string
                shares:
                  type: number
                marketValue:
                  type: number
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Couldn't retrieve data from database.


  /api/db/funds/holdings/ticker:
    get:
      summary: Gets each specified fund's holdings for a ticker over a period of time
      security:
        - Basic: []
        - Bearer: []
      parameters:
        - name: fundType
          in: query
          required: true
          type: array
          items: 
            type: string
        - name: ticker
          in: query
          required: true
          type: string
        - name: fromDate
          in: query
          required: true
          type: string
          format: date
        - name: toDate
          in: query
          required: true
          type: string
          format: date
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                fundName:
                  type: string
                description:
                  type: string
                companyId:
                  type: integer
                companyName:
                  type: string
                ticker:
                  type: string
                cusip:
                  type: string
                date:
                  type: string
                shares:
                  type: number
                marketValue:
                  type: number
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Couldn't retrieve data from database.
          
  
  /api/db/funds/change:
    get:
      summary: Gets difference in shares and market value between every day cumulative of all the funds tracked over a period of time
      security:
        - Basic: []
        - Bearer: []
      parameters:
        - name: ticker
          in: query
          required: true
          type: string
        - name: fromDate
          in: query
          required: true
          type: string
          format: date
        - name: toDate
          in: query
          required: true
          type: string
          format: date
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                fundName:
                  type: string
                description:
                  type: string
                companyId:
                  type: integer
                companyName:
                  type: string
                ticker:
                  type: string
                cusip:
                  type: string
                date:
                  type: string
                shares:
                  type: number
                marketValue:
                  type: number
                sharesDifference:
                  type: number
                marketValueDifference:
                  type: number
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Couldn't retrieve data from database.
          
          
  /api/fin/history:
    get:
      summary: Returns an array of quotes starting from and including the start date and ending on but not including the last date interested for an interval between quotes for a company.
      security:
        - Basic: []
        - Bearer: []
      parameters:
        - name: ticker
          in: query
          required: true
          type: string
        - name: period
          in: query
          required: true
          type: string
        - name: fromDate
          in: query
          required: true
          type: string
          format: date
        - name: toDate
          in: query
          required: true
          type: string
          format: date
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                open:
                  type: number
                high:
                  type: number
                low:
                  type: number
                close:
                  type: number
                adjClose:
                  type: number
                volume:
                  type: number
                symbol:
                  type: string
        '400':
          description: Period perameter is invalid. It must be one of 'd' (daily), 'w' (weekly), 'm' (monthly), or 'v' (each dividend period).
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Something wen't wrong at Yahoo's endpoint.
          
          
  /api/fin/quote:
    get:
      summary: Returns an array with the latest quote for the company represented by the ticker.
      security:
        - Basic: []
        - Bearer: []
      parameters:
        - name: ticker
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                price:
                  type: object
                  properties:
                    maxAge:
                      type: number
                    preMarketChangePercent:
                      type: number
                    preMarketChange:
                      type: number
                    preMarketTime:
                      type: string
                      format: date
                    preMarketPrice:
                      type: number
                    preMarketSource:
                      type: string
                    regularMarketChangePercent:
                      type: number
                    regularMarketChange:
                      type: number
                    regularMarketTime:
                      type: string
                      format: date
                    priceHint:
                      type: number
                    regularMarketDayHigh:
                      type: number
                    regularMarketDayLow:
                      type: number
                    regularMarketVolume:
                      type: number
                    regularMarketPreviousClose:
                      type: number
                    regularMarketSource:
                      type: string
                    regularMarketOpen:
                      type: number
                    exchange:
                      type: string
                    exchangeName:
                      type: string
                    exchangeDataDelayedBy:
                      type: number
                    marketState:
                      type: string
                    quoteType:
                      type: string
                    symbol:
                      type: string
                    underlyingSymbol:
                      type: string
                    shortName:
                      type: string
                    longName:
                      type: string
                    currency:
                      type: string
                    quoteSourceName:
                      type: string
                    currencySymbol:
                      type: string
                    fromCurrency:
                      type: string
                    toCurrency:
                      type: string
                    lastMarket:
                      type: string
                    marketCap:
                      type: number
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Something wen't wrong at Yahoo's endpoint.
          
  
  /user/questions:
    get:
      summary: Retrieves all preset security questions
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                question:
                  type: string
        '500':
          description: Couldn't retrieve data from database.
          
          
  /user/signup:
    post:
      summary: Creates a new user before returning the respective token.
      parameters:
        - in: body
          name: user
          description: User to be created
          schema:
            type: object
            required:
              - user
              - firstName
              - lastName
              - email
              - password
              - question
              - answer
            properties:
              user:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              password:
                type: string
                format: password
              question:
                type: string
              answer:
                type: string
      responses:
        '201':
          description: OK.
          schema:
            type: object
            properties:
              user:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              token:
                type: string
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Failed to create user or token if user was created.
          
          
  /user/login:
    post:
      summary: Validates user before returning the respective token.
      parameters:
        - in: body
          name: user
          description: The user to login.
          schema:
            type: object
            required: 
             - user
             - password
            properties:
              user:
                type: string
              password:
                type: string
                format: password
      responses:
        '200':
          description: Logged in.
          schema:
            type: object
            properties:
              user:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              token:
                type: string
        '400':
          description: Username and password don't match or don't exist.
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Failed to login.


  /user/recovery/user:
    post:
      summary: Validates user before returning the respective token.
      parameters:
        - in: body
          name: email
          description: Email for username recovery.
          schema:
            type: object
            required: 
             - email
            properties:
              email:
                type: string
      responses:
        '200':
          description: Email with associated username has been sent.
        '404':
          description: Email isn't associated with a user. Email not found.
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Couldn't retrieve data from database.
  
  
  /user/recovery/password:
    get:
      summary: Retrieves the specified user's security question
      parameters:
        - name: user
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Data is retrieved successfully.
          schema:
            type: object
            properties:
              question:
                type: string
        '404':
          description: No such user exists. User not found.
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Couldn't retrieve data from database.
  
  
  /user/recovery/passwordConfirm:
    post:
      summary: Validates answer with associated user's answer
      parameters:
        - in: body
          name: answer
          description: Answer to the user's security question
          schema:
            type: object
            required: 
              - user
              - answer
            properties:
              user:
                type: string
              answer:
                type: string
      responses:
        '200':
          description: Answer is correct. User is logged in.
          schema:
            type: object
            properties:
              user:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              token:
                type: string
        '400':
          description: Answer is incorrect.
        '404':
          description: User not found.
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Couldn't retrieve data from database.
  
  
  /user/recovery/updatePassword:
    post:
      summary: Updates associated user's password
      security:
        - Basic: []
        - Bearer: []
      parameters:
        - in: body
          name: password
          description: New password to be updated for the user
          schema:
            type: object
            required: 
             - password
             - confirmPassword
            properties:
              password:
                type: string
              confirmPassword:
                type: string
      responses:
        '200':
          description: Password successfully updated.
        '400':
          description: Passwords don't match.
        '422':
          description: Parameters are of an invalid format.
        '500':
          description: Couldn't retrieve data from database.